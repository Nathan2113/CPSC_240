     1                                  ;Change Comments
     2                                  
     3                                  ;****************************************************************************************************************************
     4                                  ;Program name: "Driving Time". This program will take in the user's full name, their title, and the distances they have     *
     5                                  ;traveled from Fullerton -> Santa Ana, Santa Ana -> Long Beach, and Long Beach -> Fullerton, as well as their average       *
     6                                  ;speed for each trip. Once the program has the total distance traveled and the average speed of the entire trip, the        *
     7                                  ;program will calculate the total time of the trip, then the assembly file will send the average speed back to the driver
     8                                  ;function                                                                                                                   *
     9                                  ;                                                                                                                           *
    10                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
    11                                  ;version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it will be useful,   *
    12                                  ;but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See   *
    13                                  ;the GNU General Public License for more details A copy of the GNU General Public License v3 is available here:             *
    14                                  ;<https://www.gnu.org/licenses/>.                                                                                           *
    15                                  ;****************************************************************************************************************************
    16                                  
    17                                  
    18                                  
    19                                  
    20                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    21                                  ;Author information
    22                                  ;  Author name: Nathan Warner
    23                                  ;  Author email: nwarner4@csu.fullerton.edu
    24                                  ;
    25                                  ;Program information
    26                                  ;  Program name: Driving Time
    27                                  ;  Programming languages: One module in C, one in X86, and one in bash.
    28                                  ;  Date program began: 2024-Jan-30
    29                                  ;  Date of last update: 2024-Feb-2
    30                                  ;  Files in this program: driving_time.c, average.asm, r.sh.
    31                                  ;  Testing: Alpha testing completed.  All functions are correct.
    32                                  ;  Status: Ready for release to customers
    33                                  ;
    34                                  ;Purpose
    35                                  ;  This program will take in total distance traveled and average speed and find the total time of the trip,
    36                                  ;  as well as sending the average speed of the entirety of the trip back to the driver
    37                                  ;
    38                                  ;This file:
    39                                  ;  File name: average.asm
    40                                  ;  Language: X86-64
    41                                  ;  Max page width: 124 columns
    42                                  ;  Assemble (standard): nasm -l average.lis -o average.o average.asm
    43                                  ;  Assemble (debug): nasm -g dwarf -l average.lis -o average.o average.asm
    44                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    45                                  ;  Prototype of this function: double average();
    46                                  ; 
    47                                  ;
    48                                  ;
    49                                  ;
    50                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    51                                  
    52                                  ;Declaration section.  The section has no name other than "Declaration section".  Declare here everything that does
    53                                  ;not have its own place of declaration
    54                                  
    55                                  extern printf
    56                                  
    57                                  extern fgets
    58                                  
    59                                  extern stdin
    60                                  
    61                                  extern strlen
    62                                  
    63                                  extern scanf
    64                                  
    65                                  extern cos
    66                                  
    67                                  global triangle_SAS
    68                                  
    69                                  name_string_size equ 48
    70                                  
    71                                  title_string_size equ 48
    72                                  
    73                                  segment .data
    74                                  ;This section (or segment) is for declaring initialized arrays
    75                                  
    76 00000000 506C6561736520656E-     name_prompt db "Please enter your name: ", 0
    76 00000009 74657220796F757220-
    76 00000012 6E616D653A2000     
    77 00000019 506C6561736520656E-     title_prompt db "Please enter your title (Sergeant, Chief, CEO, President, Teacher, etc): ", 0
    77 00000022 74657220796F757220-
    77 0000002B 7469746C6520285365-
    77 00000034 726765616E742C2043-
    77 0000003D 686965662C2043454F-
    77 00000046 2C2050726573696465-
    77 0000004F 6E742C205465616368-
    77 00000058 65722C20657463293A-
    77 00000061 2000               
    78 00000063 0A476F6F64206D6F72-     good_morning_msg db 10, "Good morning %s %s. We take care of all your triangles.", 10, 0
    78 0000006C 6E696E672025732025-
    78 00000075 732E2057652074616B-
    78 0000007E 652063617265206F66-
    78 00000087 20616C6C20796F7572-
    78 00000090 20747269616E676C65-
    78 00000099 732E0A00           
    79 0000009D 0A506C656173652065-     first_side_prompt db 10, "Please enter the length of the first side: ", 0
    79 000000A6 6E7465722074686520-
    79 000000AF 6C656E677468206F66-
    79 000000B8 207468652066697273-
    79 000000C1 7420736964653A2000 
    80 000000CA 0A506C656173652065-     second_side_prompt db 10, "Please enter the length of the second side: ", 0
    80 000000D3 6E7465722074686520-
    80 000000DC 6C656E677468206F66-
    80 000000E5 20746865207365636F-
    80 000000EE 6E6420736964653A20-
    80 000000F7 00                 
    81 000000F8 0A506C656173652065-     angle_prompt db 10, "Please enter the angle in degrees: ", 0
    81 00000101 6E7465722074686520-
    81 0000010A 616E676C6520696E20-
    81 00000113 646567726565733A20-
    81 0000011C 00                 
    82 0000011D 256C6600                format db "%lf", 0
    83 00000121 0A4669727374207369-     output_values_test db 10, "First side: %1.6lf, Second side: %1.6lf, Angle size: %1.3lf", 0
    83 0000012A 64653A2025312E366C-
    83 00000133 662C205365636F6E64-
    83 0000013C 20736964653A202531-
    83 00000145 2E366C662C20416E67-
    83 0000014E 6C652073697A653A20-
    83 00000157 25312E336C6600     
    84 0000015E 0A0A546865206C656E-     output_third_length db 10, 10, "The length of the third side is %1.6lf", 10, 0
    84 00000167 677468206F66207468-
    84 00000170 652074686972642073-
    84 00000179 696465206973202531-
    84 00000182 2E366C660A00       
    85 00000188 0A546865206C656E67-     length_send_message db 10, "The length will be sent to the driver program", 10, 10, 0
    85 00000191 74682077696C6C2062-
    85 0000019A 652073656E7420746F-
    85 000001A3 207468652064726976-
    85 000001AC 65722070726F677261-
    85 000001B5 6D0A0A00           
    86                                  
    87                                  
    88                                  segment .bss
    89                                  ;This section (or segment) is for declaring empty arrays
    90                                  
    91                                  align 64
    92 00000000 <res 340h>              backup_storage_area resb 832
    93                                  
    94 00000340 <res 30h>               user_name resb name_string_size
    95                                  
    96 00000370 <res 30h>               user_title resb title_string_size
    97                                  
    98                                  segment .text
    99                                  
   100                                  triangle_SAS:
   101                                  
   102                                  ;Back up the GPRs (General Purpose Registers)
   103 00000000 55                      push rbp
   104 00000001 4889E5                  mov rbp, rsp
   105 00000004 53                      push rbx
   106 00000005 51                      push rcx
   107 00000006 52                      push rdx
   108 00000007 57                      push rdi
   109 00000008 56                      push rsi
   110 00000009 4150                    push r8
   111 0000000B 4151                    push r9
   112 0000000D 4152                    push r10
   113 0000000F 4153                    push r11
   114 00000011 4154                    push r12
   115 00000013 4155                    push r13
   116 00000015 4156                    push r14
   117 00000017 4157                    push r15
   118 00000019 9C                      pushf
   119                                  
   120                                  ;Backup the registers other than the GPRs
   121 0000001A B807000000              mov rax,7
   122 0000001F BA00000000              mov rdx,0
   123 00000024 0FAE2425[00000000]      xsave [backup_storage_area]
   124                                  
   125                                  ;Output prompt for first and last name
   126 0000002C B800000000              mov rax, 0
   127 00000031 48BF-                   mov rdi, name_prompt
   127 00000033 [0000000000000000] 
   128 0000003B E8(00000000)            call printf
   129                                  
   130                                  ;Input user names
   131 00000040 B800000000              mov rax, 0
   132 00000045 48BF-                   mov rdi, user_name
   132 00000047 [4003000000000000] 
   133 0000004F BE30000000              mov rsi, name_string_size
   134 00000054 488B1425[00000000]      mov rdx, [stdin]
   135 0000005C E8(00000000)            call fgets
   136                                  
   137                                  ;Remove newline
   138 00000061 B800000000              mov rax, 0
   139 00000066 48BF-                   mov rdi, user_name
   139 00000068 [4003000000000000] 
   140 00000070 E8(00000000)            call strlen
   141 00000075 C680[3F030000]00        mov [user_name+rax-1], byte 0
   142                                  
   143                                  ;Output prompt for user's title
   144 0000007C B800000000              mov rax, 0
   145 00000081 48BF-                   mov rdi, title_prompt
   145 00000083 [1900000000000000] 
   146 0000008B E8(00000000)            call printf
   147                                  
   148                                  ;Input user title
   149 00000090 B800000000              mov rax, 0
   150 00000095 48BF-                   mov rdi, user_title
   150 00000097 [7003000000000000] 
   151 0000009F BE30000000              mov rsi, title_string_size
   152 000000A4 488B1425[00000000]      mov rdx, [stdin]
   153 000000AC E8(00000000)            call fgets
   154                                  
   155                                  ;Remove newline
   156 000000B1 B800000000              mov rax, 0
   157 000000B6 48BF-                   mov rdi, user_title
   157 000000B8 [7003000000000000] 
   158 000000C0 E8(00000000)            call strlen
   159 000000C5 C680[6F030000]00        mov [user_title+rax-1], byte 0
   160                                  
   161                                  
   162                                  
   163                                  ;Say good morning to the user
   164 000000CC B800000000              mov rax, 0
   165 000000D1 48BF-                   mov rdi, good_morning_msg
   165 000000D3 [6300000000000000] 
   166 000000DB 48BE-                   mov rsi, user_title
   166 000000DD [7003000000000000] 
   167 000000E5 48BA-                   mov rdx, user_name
   167 000000E7 [4003000000000000] 
   168 000000EF E8(00000000)            call printf
   169                                  
   170                                  
   171                                  
   172                                  
   173                                  ; Ask for length of first side
   174 000000F4 B800000000              mov rax, 0
   175 000000F9 48BF-                   mov rdi, first_side_prompt
   175 000000FB [9D00000000000000] 
   176 00000103 E8(00000000)            call printf
   177                                  
   178                                  ;Input length of first side
   179 00000108 48BF-                   mov rdi, format
   179 0000010A [1D01000000000000] 
   180 00000112 6AF7                    push qword -9
   181 00000114 6AF7                    push qword -9
   182 00000116 4889E6                  mov rsi, rsp
   183 00000119 E8(00000000)            call scanf
   184 0000011E F2440F100424            movsd xmm8, [rsp]
   185 00000124 4159                    pop r9
   186 00000126 4158                    pop r8
   187                                  
   188                                  
   189                                  
   190                                  ;Ask for length of second side
   191 00000128 B800000000              mov rax, 0
   192 0000012D 48BF-                   mov rdi, second_side_prompt
   192 0000012F [CA00000000000000] 
   193 00000137 E8(00000000)            call printf
   194                                  
   195                                  ;Input length of second side
   196 0000013C 48BF-                   mov rdi, format
   196 0000013E [1D01000000000000] 
   197 00000146 6AF7                    push qword -9
   198 00000148 6AF7                    push qword -9
   199 0000014A 4889E6                  mov rsi, rsp
   200 0000014D E8(00000000)            call scanf
   201 00000152 F2440F100C24            movsd xmm9, [rsp]
   202 00000158 4159                    pop r9
   203 0000015A 4158                    pop r8
   204                                  
   205                                  
   206                                  ;Ask for size of the angle
   207 0000015C B800000000              mov rax, 0
   208 00000161 48BF-                   mov rdi, angle_prompt
   208 00000163 [F800000000000000] 
   209 0000016B E8(00000000)            call printf
   210                                  
   211                                  ;Input size of angle
   212 00000170 48BF-                   mov rdi, format
   212 00000172 [1D01000000000000] 
   213 0000017A 6AF7                    push qword -9
   214 0000017C 6AF7                    push qword -9
   215 0000017E 4889E6                  mov rsi, rsp
   216 00000181 E8(00000000)            call scanf
   217 00000186 F2440F101424            movsd xmm10, [rsp]
   218 0000018C 4159                    pop r9
   219 0000018E 4158                    pop r8
   220                                  
   221                                  
   222                                  ;TEST OUTPUT ALL VALUES
   223                                  ; SEG FAULT - Check average code
   224 00000190 B801000000              mov rax, 1
   225 00000195 48BF-                   mov rdi, output_values_test
   225 00000197 [2101000000000000] 
   226 0000019F 48BE-                   mov rsi, format
   226 000001A1 [1D01000000000000] 
   227 000001A9 F2410F10C0              movsd xmm0, xmm8
   228 000001AE F2410F10C9              movsd xmm1, xmm9
   229 000001B3 F2410F10D2              movsd xmm2, xmm10
   230 000001B8 E8(00000000)            call printf
   231                                  
   232                                  
   233                                  
   234                                  ;Output length of third side
   235 000001BD B801000000              mov rax, 1
   236 000001C2 48BF-                   mov rdi, output_third_length
   236 000001C4 [5E01000000000000] 
   237 000001CC 48BE-                   mov rsi, format
   237 000001CE [1D01000000000000] 
   238 000001D6 F2410F10DB              movsd xmm3, xmm11
   239 000001DB E8(00000000)            call printf
   240                                  
   241                                  
   242                                  
   243                                  ;Output confirmation that the third length is being sent to driver
   244 000001E0 B801000000              mov rax, 1
   245 000001E5 48BF-                   mov rdi, length_send_message
   245 000001E7 [8801000000000000] 
   246 000001EF 48BE-                   mov rsi, format
   246 000001F1 [1D01000000000000] 
   247 000001F9 F20F10C3                movsd xmm0, xmm3
   248 000001FD E8(00000000)            call printf
   249                                  
   250                                  
   251                                  ;Back up value in xmm14 before restoring registers
   252 00000202 6A00                    push qword 0
   253 00000204 F2440F113424            movsd [rsp], xmm14
   254                                  
   255                                  
   256                                  ;Restore the values to non-GPRs
   257 0000020A B807000000              mov rax, 7
   258 0000020F BA00000000              mov rdx, 0
   259 00000214 0FAE2C25[00000000]      xrstor [backup_storage_area]
   260                                  
   261                                  
   262 0000021C F20F100424              movsd xmm0, [rsp]
   263 00000221 58                      pop rax
   264                                  
   265                                  
   266                                  ;Restore the GPRs
   267 00000222 9D                      popf
   268 00000223 415F                    pop r15
   269 00000225 415E                    pop r14
   270 00000227 415D                    pop r13
   271 00000229 415C                    pop r12
   272 0000022B 415B                    pop r11
   273 0000022D 415A                    pop r10
   274 0000022F 4159                    pop r9
   275 00000231 4158                    pop r8
   276 00000233 5E                      pop rsi
   277 00000234 5F                      pop rdi
   278 00000235 5A                      pop rdx
   279 00000236 59                      pop rcx
   280 00000237 5B                      pop rbx
   281 00000238 5D                      pop rbp   ;Restore rbp to the base of the activation record of the caller program
   282 00000239 C3                      ret
   283                                  ;End of the function average.asm ====================================================================
   284                                  
   285                                  ;Change Comments
