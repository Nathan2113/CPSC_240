     1                                  ; Nathan Warner
     2                                  ; nwarner4@csu.fullerton.edu
     3                                  ; CPSC 240-3
     4                                  ; Mar 20, 2024
     5                                  
     6                                  ;Declaration section.  The section has no name other than "Declaration section".  Declare here everything that does
     7                                  ;not have its own place of declaration
     8                                  
     9                                  global current
    10                                  
    11                                  extern printf
    12                                  
    13                                  
    14                                  float_size equ 60
    15                                  
    16                                  segment .data
    17                                  ;This section (or segment) is for declaring initialized arrays
    18                                  
    19                                  ; program_desc db 10, "This program will manage your arrays of 64-bit floats", 10, 0
    20 00000000 256C6600                format db "%lf", 0
    21 00000004 546865206375727265-     current_first_circuit db "The current on the first circuit is %1.5lf amps.", 10, 0
    21 0000000D 6E74206F6E20746865-
    21 00000016 206669727374206369-
    21 0000001F 726375697420697320-
    21 00000028 25312E356C6620616D-
    21 00000031 70732E0A00         
    22 00000036 546865206375727265-     current_second_circuit db "The current on the second circuit is %1.5lf amps.", 10, 0
    22 0000003F 6E74206F6E20746865-
    22 00000048 207365636F6E642063-
    22 00000051 697263756974206973-
    22 0000005A 2025312E356C662061-
    22 00000063 6D70732E0A00       
    23 00000069 54686520746F74616C-     total_current db "The total current is %1.5lf amps.", 10, 10, 0
    23 00000072 2063757272656E7420-
    23 0000007B 69732025312E356C66-
    23 00000084 20616D70732E0A0A00 
    24                                  
    25                                  segment .bss
    26                                  ;This section (or segment) is for declaring empty arrays
    27                                  
    28                                  align 64
    29 00000000 <res 340h>              backup_storage_area resb 832
    30                                  
    31                                  
    32                                  segment .text
    33                                  
    34                                  current:
    35                                  
    36                                      ;Back up the GPRs (General Purpose Registers)
    37 00000000 55                          push rbp
    38 00000001 4889E5                      mov rbp, rsp
    39 00000004 53                          push rbx
    40 00000005 51                          push rcx
    41 00000006 52                          push rdx
    42 00000007 57                          push rdi
    43 00000008 56                          push rsi
    44 00000009 4150                        push r8
    45 0000000B 4151                        push r9
    46 0000000D 4152                        push r10
    47 0000000F 4153                        push r11
    48 00000011 4154                        push r12
    49 00000013 4155                        push r13
    50 00000015 4156                        push r14
    51 00000017 4157                        push r15
    52 00000019 9C                          pushf
    53                                  
    54                                      ;Backup the registers other than the GPRs
    55 0000001A B807000000                  mov rax,7
    56 0000001F BA00000000                  mov rdx,0
    57 00000024 0FAE2425[00000000]          xsave [backup_storage_area]
    58                                  
    59                                      ;move values to higher registers to prevent losing the data
    60                                      ;xmm10 = electric force
    61                                      ;xmm11 = resistance of the first circuit
    62                                      ;xmm12 = resistance of the second circuit
    63                                      ;xmm13 = electric force (moved twice to prevent losing data from first division)
    64 0000002C F2440F10D0                  movsd xmm10, xmm0
    65 00000031 F2440F10D9                  movsd xmm11, xmm1
    66 00000036 F2440F10E2                  movsd xmm12, xmm2
    67 0000003B F2450F10EA                  movsd xmm13, xmm10
    68                                  
    69                                  
    70                                  
    71                                      ;Block to get the current of the first circuit
    72 00000040 F2450F5ED3                  divsd xmm10, xmm11
    73 00000045 F2450F10DA                  movsd xmm11, xmm10 ;move the result into xmm11
    74                                  
    75                                      ;Block to get the current of the second circuit
    76 0000004A F2450F5EEC                  divsd xmm13, xmm12
    77 0000004F F2450F10E5                  movsd xmm12, xmm13 ;move the result into xmm12
    78                                  
    79                                      ;Output the current of the first circuit to the screen
    80 00000054 B801000000                  mov rax, 1
    81 00000059 48BF-                       mov rdi, current_first_circuit
    81 0000005B [0400000000000000] 
    82 00000063 F2410F10C3                  movsd xmm0, xmm11
    83 00000068 E8(00000000)                call printf
    84                                  
    85                                  
    86                                      ;Output the current of the second circuit to the screen
    87 0000006D B801000000                  mov rax, 1
    88 00000072 48BF-                       mov rdi, current_second_circuit
    88 00000074 [3600000000000000] 
    89 0000007C F2410F10C4                  movsd xmm0, xmm12
    90 00000081 E8(00000000)                call printf
    91                                  
    92                                  
    93                                      ;Block to add currents together and set return value
    94 00000086 F2450F58DC                  addsd xmm11, xmm12
    95                                  
    96                                      
    97                                      ;Output the total current to the screen
    98 0000008B B801000000                  mov rax, 1
    99 00000090 48BF-                       mov rdi, total_current
    99 00000092 [6900000000000000] 
   100 0000009A F2410F10C3                  movsd xmm0, xmm11
   101 0000009F E8(00000000)                call printf
   102                                  
   103                                  
   104                                      ;Back up value in xmm11 before restoring registers
   105 000000A4 6A00                        push qword 0
   106 000000A6 F2440F111C24                movsd [rsp], xmm11
   107                                  
   108                                  
   109                                  
   110                                      ;Restore the values to non-GPRs
   111 000000AC B807000000                  mov rax, 7
   112 000000B1 BA00000000                  mov rdx, 0
   113 000000B6 0FAE2C25[00000000]          xrstor [backup_storage_area]
   114                                  
   115                                  
   116 000000BE F20F100424                  movsd xmm0, [rsp]
   117 000000C3 58                          pop rax
   118                                      
   119                                  
   120                                  
   121                                      ;Restore the GPRs
   122 000000C4 9D                          popf
   123 000000C5 415F                        pop r15
   124 000000C7 415E                        pop r14
   125 000000C9 415D                        pop r13
   126 000000CB 415C                        pop r12
   127 000000CD 415B                        pop r11
   128 000000CF 415A                        pop r10
   129 000000D1 4159                        pop r9
   130 000000D3 4158                        pop r8
   131 000000D5 5E                          pop rsi
   132 000000D6 5F                          pop rdi
   133 000000D7 5A                          pop rdx
   134 000000D8 59                          pop rcx
   135 000000D9 5B                          pop rbx
   136 000000DA 5D                          pop rbp   ;Restore rbp to the base of the activation record of the caller program
   137 000000DB C3                          ret
   138                                  ;End of the function current.asm ====================================================================
