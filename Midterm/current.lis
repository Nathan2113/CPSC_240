     1                                  ; Nathan Warner
     2                                  ; nwarner4@csu.fullerton.edu
     3                                  ; CPSC 240-3
     4                                  ; Mar 20, 2024
     5                                  
     6                                  ;Declaration section.  The section has no name other than "Declaration section".  Declare here everything that does
     7                                  ;not have its own place of declaration
     8                                  
     9                                  global current
    10                                  
    11                                  extern printf
    12                                  
    13                                  
    14                                  float_size equ 60
    15                                  
    16                                  segment .data
    17                                  ;This section (or segment) is for declaring initialized arrays
    18                                  
    19                                  ; program_desc db 10, "This program will manage your arrays of 64-bit floats", 10, 0
    20 00000000 256C6600                format db "%lf", 0
    21 00000004 546865206375727265-     current_first_circuit db "The current on the first circuit is %1.5lf amps.", 10, 0
    21 0000000D 6E74206F6E20746865-
    21 00000016 206669727374206369-
    21 0000001F 726375697420697320-
    21 00000028 25312E356C6620616D-
    21 00000031 70732E0A00         
    22 00000036 546865206375727265-     current_second_circuit db "The current on the second circuit is %1.5lf amps.", 10, 0
    22 0000003F 6E74206F6E20746865-
    22 00000048 207365636F6E642063-
    22 00000051 697263756974206973-
    22 0000005A 2025312E356C662061-
    22 00000063 6D70732E0A00       
    23 00000069 54686520746F74616C-     total_current db "The total current is %1.5lf amps.", 10, 10, 0
    23 00000072 2063757272656E7420-
    23 0000007B 69732025312E356C66-
    23 00000084 20616D70732E0A0A00 
    24 0000008D 5468652076616C7565-     test_value db "The value is %1.6lf", 10, 0
    24 00000096 2069732025312E366C-
    24 0000009F 660A00             
    25                                  
    26                                  segment .bss
    27                                  ;This section (or segment) is for declaring empty arrays
    28                                  
    29                                  align 64
    30 00000000 <res 340h>              backup_storage_area resb 832
    31                                  
    32                                  
    33                                  segment .text
    34                                  
    35                                  current:
    36                                  
    37                                      ;Back up the GPRs (General Purpose Registers)
    38 00000000 55                          push rbp
    39 00000001 4889E5                      mov rbp, rsp
    40 00000004 53                          push rbx
    41 00000005 51                          push rcx
    42 00000006 52                          push rdx
    43 00000007 57                          push rdi
    44 00000008 56                          push rsi
    45 00000009 4150                        push r8
    46 0000000B 4151                        push r9
    47 0000000D 4152                        push r10
    48 0000000F 4153                        push r11
    49 00000011 4154                        push r12
    50 00000013 4155                        push r13
    51 00000015 4156                        push r14
    52 00000017 4157                        push r15
    53 00000019 9C                          pushf
    54                                  
    55                                      ;Backup the registers other than the GPRs
    56 0000001A B807000000                  mov rax,7
    57 0000001F BA00000000                  mov rdx,0
    58 00000024 0FAE2425[00000000]          xsave [backup_storage_area]
    59                                  
    60                                      ;move values to higher registers to prevent losing the data
    61                                      ;xmm10 = electric force
    62                                      ;xmm11 = resistance of the first circuit
    63                                      ;xmm12 = resistance of the second circuit
    64                                      ;xmm13 = electric force (moved twice to prevent losing data from first division)
    65 0000002C F2440F10D0                  movsd xmm10, xmm0
    66 00000031 F2440F10D9                  movsd xmm11, xmm1
    67 00000036 F2440F10E2                  movsd xmm12, xmm2
    68 0000003B F2450F10EA                  movsd xmm13, xmm10
    69                                  
    70                                      ;testing values
    71 00000040 B801000000                  mov rax, 1
    72 00000045 48BF-                       mov rdi, test_value
    72 00000047 [8D00000000000000] 
    73 0000004F F2410F10C2                  movsd xmm0, xmm10
    74 00000054 E8(00000000)                call printf
    75                                  
    76 00000059 B801000000                      mov rax, 1
    77 0000005E 48BF-                       mov rdi, test_value
    77 00000060 [8D00000000000000] 
    78 00000068 F2410F10C3                  movsd xmm0, xmm11
    79 0000006D E8(00000000)                call printf
    80                                  
    81 00000072 B801000000                      mov rax, 1
    82 00000077 48BF-                       mov rdi, test_value
    82 00000079 [8D00000000000000] 
    83 00000081 F2410F10C4                  movsd xmm0, xmm12
    84 00000086 E8(00000000)                call printf
    85                                  
    86                                  
    87                                  
    88                                      ;Block to get the current of the first circuit
    89 0000008B F2450F5ED3                  divsd xmm10, xmm11
    90 00000090 F2450F10DA                  movsd xmm11, xmm10 ;move the result into xmm11
    91                                  
    92                                      ;Block to get the current of the second circuit
    93 00000095 F2450F5EEC                  divsd xmm13, xmm12
    94 0000009A F2450F10E5                  movsd xmm12, xmm13 ;move the result into xmm12
    95                                  
    96                                      ;Output the current of the first circuit to the screen
    97 0000009F B801000000                  mov rax, 1
    98 000000A4 48BF-                       mov rdi, current_first_circuit
    98 000000A6 [0400000000000000] 
    99 000000AE F2410F10C3                  movsd xmm0, xmm11
   100 000000B3 E8(00000000)                call printf
   101                                  
   102                                  
   103                                      ;Output the current of the second circuit to the screen
   104 000000B8 B801000000                  mov rax, 1
   105 000000BD 48BF-                       mov rdi, current_second_circuit
   105 000000BF [3600000000000000] 
   106 000000C7 F2410F10C4                  movsd xmm0, xmm12
   107 000000CC E8(00000000)                call printf
   108                                  
   109                                  
   110                                      ;Block to add currents together and set return value
   111 000000D1 F2450F58DC                  addsd xmm11, xmm12
   112                                  
   113                                      
   114                                      ;Output the total current to the screen
   115 000000D6 B801000000                  mov rax, 1
   116 000000DB 48BF-                       mov rdi, total_current
   116 000000DD [6900000000000000] 
   117 000000E5 F2410F10C3                  movsd xmm0, xmm11
   118 000000EA E8(00000000)                call printf
   119                                  
   120                                  
   121                                      ;Back up value in xmm11 before restoring registers
   122 000000EF 6A00                        push qword 0
   123 000000F1 F2440F111C24                movsd [rsp], xmm11
   124                                  
   125                                  
   126                                  
   127                                      ;Restore the values to non-GPRs
   128 000000F7 B807000000                  mov rax, 7
   129 000000FC BA00000000                  mov rdx, 0
   130 00000101 0FAE2C25[00000000]          xrstor [backup_storage_area]
   131                                  
   132                                  
   133 00000109 F20F100424                  movsd xmm0, [rsp]
   134 0000010E 58                          pop rax
   135                                      
   136                                  
   137                                  
   138                                      ;Restore the GPRs
   139 0000010F 9D                          popf
   140 00000110 415F                        pop r15
   141 00000112 415E                        pop r14
   142 00000114 415D                        pop r13
   143 00000116 415C                        pop r12
   144 00000118 415B                        pop r11
   145 0000011A 415A                        pop r10
   146 0000011C 4159                        pop r9
   147 0000011E 4158                        pop r8
   148 00000120 5E                          pop rsi
   149 00000121 5F                          pop rdi
   150 00000122 5A                          pop rdx
   151 00000123 59                          pop rcx
   152 00000124 5B                          pop rbx
   153 00000125 5D                          pop rbp   ;Restore rbp to the base of the activation record of the caller program
   154 00000126 C3                          ret
   155                                  ;End of the function current.asm ====================================================================
