     1                                  ;****************************************************************************************************************************
     2                                  ;Program name: "Driving Time". This program will take in the user's full name, their title, and the distances they have     *
     3                                  ;traveled from Fullerton -> Santa Ana, Santa Ana -> Long Beach, and Long Beach -> Fullerton, as well as their average       *
     4                                  ;speed for each trip. Once the program has the total distance traveled and the average speed of the entire trip, the        *
     5                                  ;program will calculate the total time of the trip, then the assembly file will send the average speed back to the driver
     6                                  ;function                                                                                                                   *
     7                                  ;                                                                                                                           *
     8                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     9                                  ;version 3 as published by the Free Software Foundation.  This program is distributed in the hope that it will be useful,   *
    10                                  ;but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See   *
    11                                  ;the GNU General Public License for more details A copy of the GNU General Public License v3 is available here:             *
    12                                  ;<https://www.gnu.org/licenses/>.                                                                                           *
    13                                  ;****************************************************************************************************************************
    14                                  
    15                                  
    16                                  
    17                                  
    18                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    19                                  ;Author information
    20                                  ;  Author name: Nathan Warner
    21                                  ;  Author email: nwarner4@csu.fullerton.edu
    22                                  ;
    23                                  ;Program information
    24                                  ;  Program name: Driving Time
    25                                  ;  Programming languages: One module in C, one in X86, and one in bash.
    26                                  ;  Date program began: 2024-Jan-30
    27                                  ;  Date of last update: 2024-Feb-2
    28                                  ;  Files in this program: driving_time.c, average.asm, r.sh.
    29                                  ;  Testing: Alpha testing completed.  All functions are correct.
    30                                  ;  Status: Ready for release to customers
    31                                  ;
    32                                  ;Purpose
    33                                  ;  This program will take in total distance traveled and average speed and find the total time of the trip,
    34                                  ;  as well as sending the average speed of the entirety of the trip back to the driver
    35                                  ;
    36                                  ;This file:
    37                                  ;  File name: average.asm
    38                                  ;  Language: X86-64
    39                                  ;  Max page width: 124 columns
    40                                  ;  Assemble (standard): nasm -l average.lis -o average.o average.asm
    41                                  ;  Assemble (debug): nasm -g dwarf -l average.lis -o average.o average.asm
    42                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    43                                  ;  Prototype of this function: double average();
    44                                  ; 
    45                                  ;
    46                                  ;
    47                                  ;
    48                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3**
    49                                  
    50                                  ;Declaration section.  The section has no name other than "Declaration section".  Declare here everything that does
    51                                  ;not have its own place of declaration
    52                                  
    53                                  extern printf
    54                                  
    55                                  extern fgets
    56                                  
    57                                  extern stdin
    58                                  
    59                                  extern strlen
    60                                  
    61                                  extern scanf
    62                                  
    63                                  global average
    64                                  
    65                                  name_string_size equ 48
    66                                  
    67                                  title_string_size equ 48
    68                                  
    69                                  segment .data
    70                                  ;This section (or segment) is for declaring initialized arrays
    71                                  
    72 00000000 506C6561736520656E-     name_prompt db "Please enter your first and last names: ", 0
    72 00000009 74657220796F757220-
    72 00000012 666972737420616E64-
    72 0000001B 206C617374206E616D-
    72 00000024 65733A2000         
    73 00000029 506C6561736520656E-     title_prompt db "Please enter your title such as Lieutenant, Chief, Mr, Ms, Influencer, Chairman, Freshman,", 10, "Foreman, Project Leader, etc: ", 0
    73 00000032 74657220796F757220-
    73 0000003B 7469746C6520737563-
    73 00000044 68206173204C696575-
    73 0000004D 74656E616E742C2043-
    73 00000056 686965662C204D722C-
    73 0000005F 204D732C20496E666C-
    73 00000068 75656E6365722C2043-
    73 00000071 686169726D616E2C20-
    73 0000007A 46726573686D616E2C-
    73 00000083 0A466F72656D616E2C-
    73 0000008C 2050726F6A65637420-
    73 00000095 4C65616465722C2065-
    73 0000009E 74633A2000         
    74 000000A3 5468616E6B20796F75-     thank_you_p1 db "Thank you %s", 0
    74 000000AC 20257300           
    75 000000B0 2025730A00              thank_you_p2 db " %s", 10, 0
    76 000000B5 0A456E746572207468-     fullerton_prompt db 10, "Enter the number of miles traveled from Fullerton to Santa Ana: ", 0
    76 000000BE 65206E756D62657220-
    76 000000C7 6F66206D696C657320-
    76 000000D0 74726176656C656420-
    76 000000D9 66726F6D2046756C6C-
    76 000000E2 6572746F6E20746F20-
    76 000000EB 53616E746120416E61-
    76 000000F4 3A2000             
    77 000000F7 0A456E746572207468-     santa_ana_prompt db 10, "Enter the number of miles traveled from Santa Ana to Long Beach: ", 0
    77 00000100 65206E756D62657220-
    77 00000109 6F66206D696C657320-
    77 00000112 74726176656C656420-
    77 0000011B 66726F6D2053616E74-
    77 00000124 6120416E6120746F20-
    77 0000012D 4C6F6E672042656163-
    77 00000136 683A2000           
    78 0000013A 0A456E746572207468-     long_beach_prompt db 10, "Enter the number of miles traveled from Long Beach to Fullerton: ", 0
    78 00000143 65206E756D62657220-
    78 0000014C 6F66206D696C657320-
    78 00000155 74726176656C656420-
    78 0000015E 66726F6D204C6F6E67-
    78 00000167 20426561636820746F-
    78 00000170 2046756C6C6572746F-
    78 00000179 6E3A2000           
    79 0000017D 456E74657220796F75-     speed_prompt db "Enter your average speed during that leg of the trip: ", 0
    79 00000186 722061766572616765-
    79 0000018F 207370656564206475-
    79 00000198 72696E672074686174-
    79 000001A1 206C6567206F662074-
    79 000001AA 686520747269703A20-
    79 000001B3 00                 
    80 000001B4 256C6600                format db "%lf", 0
    81 000001B8 54686520696E707574-     process_message db "The inputted data are being processed", 10, 10, 0
    81 000001C1 746564206461746120-
    81 000001CA 617265206265696E67-
    81 000001D3 2070726F6365737365-
    81 000001DC 640A0A00           
    82 000001E0 54686520746F74616C-     total_distance db "The total distance traveled is %1.1lf miles.", 10, 0
    82 000001E9 2064697374616E6365-
    82 000001F2 2074726176656C6564-
    82 000001FB 2069732025312E316C-
    82 00000204 66206D696C65732E0A-
    82 0000020D 00                 
    83 0000020E 5468652074696D6520-     trip_time db "The time of trip is %1.8lf", 10, 0
    83 00000217 6F6620747269702069-
    83 00000220 732025312E386C660A-
    83 00000229 00                 
    84 0000022A 546865206176657261-     average_speed db "The average speed during the trip is %1.8lf mph.", 10, 0
    84 00000233 676520737065656420-
    84 0000023C 647572696E67207468-
    84 00000245 652074726970206973-
    84 0000024E 2025312E386C66206D-
    84 00000257 70682E0A00         
    85                                  
    86 0000025C 0000000000000840        val dq 3.0
    87                                  
    88                                  
    89                                  ;TESTING
    90 00000264 0A54726176656C6564-     trip_output_test db 10, "Traveled miles: %lf", 0
    90 0000026D 206D696C65733A2025-
    90 00000276 6C6600             
    91 00000279 0A5370656564205472-     trip_speed_test db 10, "Speed Traveled: %lf", 10, 10, 0
    91 00000282 6176656C65643A2025-
    91 0000028B 6C660A0A00         
    92 00000290 0A5468697320726567-     register_test db 10, "This register holds: %1.5lf", 10, 10, 0
    92 00000299 697374657220686F6C-
    92 000002A2 64733A2025312E356C-
    92 000002AB 660A0A00           
    93                                  
    94                                  
    95                                  
    96                                  segment .bss
    97                                  ;This section (or segment) is for declaring empty arrays
    98                                  
    99                                  align 64
   100 00000000 <res 340h>              backup_storage_area resb 832
   101                                  
   102 00000340 <res 30h>               user_name resb name_string_size
   103                                  
   104 00000370 <res 30h>               user_title resb title_string_size
   105                                  
   106                                  segment .text
   107                                  
   108                                  average:
   109                                  
   110                                  ;Back up the GPRs (General Purpose Registers)
   111 00000000 55                      push rbp
   112 00000001 4889E5                  mov rbp, rsp
   113 00000004 53                      push rbx
   114 00000005 51                      push rcx
   115 00000006 52                      push rdx
   116 00000007 57                      push rdi
   117 00000008 56                      push rsi
   118 00000009 4150                    push r8
   119 0000000B 4151                    push r9
   120 0000000D 4152                    push r10
   121 0000000F 4153                    push r11
   122 00000011 4154                    push r12
   123 00000013 4155                    push r13
   124 00000015 4156                    push r14
   125 00000017 4157                    push r15
   126 00000019 9C                      pushf
   127                                  
   128                                  ;Backup the registers other than the GPRs
   129 0000001A B807000000              mov rax,7
   130 0000001F BA00000000              mov rdx,0
   131 00000024 0FAE2425[00000000]      xsave [backup_storage_area]
   132                                  
   133                                  ;Output prompt for first and last name
   134 0000002C B800000000              mov rax, 0
   135 00000031 48BF-                   mov rdi, name_prompt
   135 00000033 [0000000000000000] 
   136 0000003B E8(00000000)            call printf
   137                                  
   138                                  ;Input user names
   139 00000040 B800000000              mov rax, 0
   140 00000045 48BF-                   mov rdi, user_name
   140 00000047 [4003000000000000] 
   141 0000004F BE30000000              mov rsi, name_string_size
   142 00000054 488B1425[00000000]      mov rdx, [stdin]
   143 0000005C E8(00000000)            call fgets
   144                                  
   145                                  ;Remove newline
   146 00000061 B800000000              mov rax, 0
   147 00000066 48BF-                   mov rdi, user_name
   147 00000068 [4003000000000000] 
   148 00000070 E8(00000000)            call strlen
   149 00000075 C680[3F030000]00        mov [user_name+rax-1], byte 0
   150                                  
   151                                  ;Output prompt for user's title
   152 0000007C B800000000              mov rax, 0
   153 00000081 48BF-                   mov rdi, title_prompt
   153 00000083 [2900000000000000] 
   154 0000008B E8(00000000)            call printf
   155                                  
   156                                  ;Input user title
   157 00000090 B800000000              mov rax, 0
   158 00000095 48BF-                   mov rdi, user_title
   158 00000097 [7003000000000000] 
   159 0000009F BE30000000              mov rsi, title_string_size
   160 000000A4 488B1425[00000000]      mov rdx, [stdin]
   161 000000AC E8(00000000)            call fgets
   162                                  
   163                                  ;Remove newline
   164 000000B1 B800000000              mov rax, 0
   165 000000B6 48BF-                   mov rdi, user_title
   165 000000B8 [7003000000000000] 
   166 000000C0 E8(00000000)            call strlen
   167 000000C5 C680[6F030000]00        mov [user_title+rax-1], byte 0
   168                                  
   169                                  ;Say thank you part 1
   170 000000CC B800000000              mov rax, 0
   171 000000D1 48BF-                   mov rdi, thank_you_p1
   171 000000D3 [A300000000000000] 
   172 000000DB 48BE-                   mov rsi, user_title
   172 000000DD [7003000000000000] 
   173 000000E5 E8(00000000)            call printf
   174                                  
   175                                  ;Say thank you part 2
   176 000000EA B800000000              mov rax, 0
   177 000000EF 48BF-                   mov rdi, thank_you_p2
   177 000000F1 [B000000000000000] 
   178 000000F9 48BE-                   mov rsi, user_name
   178 000000FB [4003000000000000] 
   179 00000103 E8(00000000)            call printf
   180                                  
   181                                  
   182                                  
   183                                  
   184                                  
   185                                  ;Ask for number of miles from Fullerton to Santa Ana
   186 00000108 B800000000              mov rax, 0
   187 0000010D 48BF-                   mov rdi, fullerton_prompt
   187 0000010F [B500000000000000] 
   188 00000117 E8(00000000)            call printf
   189                                  
   190                                  ;Input number of miles from Fullerton to Santa Ana
   191 0000011C 48BF-                   mov rdi, format
   191 0000011E [B401000000000000] 
   192 00000126 6AF7                    push qword -9
   193 00000128 6AF7                    push qword -9
   194 0000012A 4889E6                  mov rsi, rsp
   195 0000012D E8(00000000)            call scanf
   196 00000132 F2440F100424            movsd xmm8, [rsp]
   197 00000138 58                      pop rax
   198 00000139 58                      pop rax
   199                                  
   200                                  
   201                                  ;Ask for average speed from Fullerton to Santa Ana
   202 0000013A B800000000              mov rax, 0
   203 0000013F 48BF-                   mov rdi, speed_prompt
   203 00000141 [7D01000000000000] 
   204 00000149 E8(00000000)            call printf
   205                                  
   206                                  ;Input average speed from Fullerton to Santa Ana
   207 0000014E 48BF-                   mov rdi, format
   207 00000150 [B401000000000000] 
   208 00000158 6AF7                    push qword -9
   209 0000015A 6AF7                    push qword -9
   210 0000015C 4889E6                  mov rsi, rsp
   211 0000015F E8(00000000)            call scanf
   212 00000164 F2440F100C24            movsd xmm9, [rsp]
   213 0000016A 58                      pop rax
   214 0000016B 58                      pop rax
   215                                  
   216                                  
   217                                  
   218                                  ;Ask for number of miles from Santa Ana to Long Beach
   219 0000016C B800000000              mov rax, 0
   220 00000171 48BF-                   mov rdi, santa_ana_prompt
   220 00000173 [F700000000000000] 
   221 0000017B E8(00000000)            call printf
   222                                  
   223                                  ;Input number of miles from Santa Ana to Long Beach
   224 00000180 48BF-                   mov rdi, format
   224 00000182 [B401000000000000] 
   225 0000018A 6AF7                    push qword -9
   226 0000018C 6AF7                    push qword -9
   227 0000018E 4889E6                  mov rsi, rsp
   228 00000191 E8(00000000)            call scanf
   229 00000196 F2440F101424            movsd xmm10, [rsp]
   230 0000019C 58                      pop rax
   231 0000019D 58                      pop rax
   232                                  
   233                                  
   234                                  
   235                                  ;Ask for average speed from Santa Ana to Long Beach
   236 0000019E B800000000              mov rax, 0
   237 000001A3 48BF-                   mov rdi, speed_prompt
   237 000001A5 [7D01000000000000] 
   238 000001AD E8(00000000)            call printf
   239                                  
   240                                  ;Input average speed from Santa Ana to Long Beach
   241 000001B2 48BF-                   mov rdi, format
   241 000001B4 [B401000000000000] 
   242 000001BC 6AF7                    push qword -9
   243 000001BE 6AF7                    push qword -9
   244 000001C0 4889E6                  mov rsi, rsp
   245 000001C3 E8(00000000)            call scanf
   246 000001C8 F2440F101C24            movsd xmm11, [rsp]
   247 000001CE 58                      pop rax
   248 000001CF 58                      pop rax
   249                                  
   250                                  
   251                                  
   252                                  ;Ask for number of miles from Long Beach to Fullerton
   253 000001D0 B800000000              mov rax, 0
   254 000001D5 48BF-                   mov rdi, long_beach_prompt
   254 000001D7 [3A01000000000000] 
   255 000001DF E8(00000000)            call printf
   256                                  
   257                                  ;Input number of miles from Long Beach to Fullerton
   258 000001E4 48BF-                   mov rdi, format
   258 000001E6 [B401000000000000] 
   259 000001EE 6AF7                    push qword -9
   260 000001F0 6AF7                    push qword -9
   261 000001F2 4889E6                  mov rsi, rsp
   262 000001F5 E8(00000000)            call scanf
   263 000001FA F2440F102424            movsd xmm12, [rsp]
   264 00000200 58                      pop rax
   265 00000201 58                      pop rax
   266                                  
   267                                  
   268                                  
   269                                  ;Ask for average speed from Long Beach to Fullerton
   270 00000202 B800000000              mov rax, 0
   271 00000207 48BF-                   mov rdi, speed_prompt
   271 00000209 [7D01000000000000] 
   272 00000211 E8(00000000)            call printf
   273                                  
   274                                  ;Input average speed from Long Beach to Fullerton
   275 00000216 48BF-                   mov rdi, format
   275 00000218 [B401000000000000] 
   276 00000220 6AF7                    push qword -9
   277 00000222 6AF7                    push qword -9
   278 00000224 4889E6                  mov rsi, rsp
   279 00000227 E8(00000000)            call scanf
   280 0000022C F2440F102C24            movsd xmm13, [rsp]
   281 00000232 58                      pop rax
   282 00000233 58                      pop rax
   283                                  
   284                                  
   285                                  
   286                                  ;Get total distance traveled
   287 00000234 F2450F10F0              movsd xmm14, xmm8
   288 00000239 F2450F58F2              addsd xmm14, xmm10
   289 0000023E F2450F58F4              addsd xmm14, xmm12
   290                                  
   291                                  
   292                                  ;Get average speed
   293 00000243 F2450F10F9              movsd xmm15, xmm9
   294 00000248 F2450F58FB              addsd xmm15, xmm11
   295 0000024D F2450F58FD              addsd xmm15, xmm13
   296                                  
   297 00000252 F20F103C25-             movsd xmm7, qword [val]
   297 00000257 [5C020000]         
   298 0000025B F2440F5EFF              divsd xmm15, xmm7
   299                                  
   300                                  
   301                                  ;Get total time
   302 00000260 F2450F10CE              movsd xmm9, xmm14
   303 00000265 F2450F5ECF              divsd xmm9, xmm15
   304                                  
   305                                  
   306                                  ;Output to let user know that data is being processed
   307 0000026A B800000000              mov rax, 0
   308 0000026F 48BF-                   mov rdi, process_message
   308 00000271 [B801000000000000] 
   309 00000279 E8(00000000)            call printf
   310                                  
   311                                  
   312                                  ;Output total distance traveled
   313 0000027E B801000000              mov rax, 1
   314 00000283 48BF-                   mov rdi, total_distance
   314 00000285 [E001000000000000] 
   315 0000028D 48BE-                   mov rsi, format
   315 0000028F [B401000000000000] 
   316 00000297 F2410F10C6              movsd xmm0, xmm14
   317 0000029C E8(00000000)            call printf
   318                                  
   319                                  
   320                                  
   321                                  ;Output total time of trip
   322 000002A1 B801000000              mov rax, 1
   323 000002A6 48BF-                   mov rdi, trip_time
   323 000002A8 [0E02000000000000] 
   324 000002B0 48BE-                   mov rsi, format
   324 000002B2 [B401000000000000] 
   325 000002BA F2410F10C1              movsd xmm0, xmm9
   326 000002BF E8(00000000)            call printf
   327                                  
   328                                  
   329                                  
   330                                  ;Output average speed
   331 000002C4 B801000000              mov rax, 1
   332 000002C9 48BF-                   mov rdi, average_speed
   332 000002CB [2A02000000000000] 
   333 000002D3 48BE-                   mov rsi, format
   333 000002D5 [B401000000000000] 
   334 000002DD F2410F10C7              movsd xmm0, xmm15
   335 000002E2 E8(00000000)            call printf
   336                                  
   337                                  
   338                                  
   339                                  ;Back up value in xmm15 before restoring registers
   340 000002E7 6A00                    push qword 0
   341 000002E9 F2440F113C24            movsd [rsp], xmm15
   342                                  
   343                                  
   344                                  ;Restore the values to non-GPRs
   345 000002EF B807000000              mov rax, 7
   346 000002F4 BA00000000              mov rdx, 0
   347 000002F9 0FAE2C25[00000000]      xrstor [backup_storage_area]
   348                                  
   349                                  
   350                                  
   351 00000301 F20F100424              movsd xmm0, [rsp]
   352 00000306 58                      pop rax
   353                                  
   354                                  
   355                                  
   356                                  ;Restore the GPRs
   357 00000307 9D                      popf
   358 00000308 415F                    pop r15
   359 0000030A 415E                    pop r14
   360 0000030C 415D                    pop r13
   361 0000030E 415C                    pop r12
   362 00000310 415B                    pop r11
   363 00000312 415A                    pop r10
   364 00000314 4159                    pop r9
   365 00000316 4158                    pop r8
   366 00000318 5E                      pop rsi
   367 00000319 5F                      pop rdi
   368 0000031A 5A                      pop rdx
   369 0000031B 59                      pop rcx
   370 0000031C 5B                      pop rbx
   371 0000031D 5D                      pop rbp   ;Restore rbp to the base of the activation record of the caller program
   372 0000031E C3                      ret
   373                                  ;End of the function average.asm ====================================================================
